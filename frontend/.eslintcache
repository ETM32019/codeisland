[{"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/index.js":"1","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/App.js":"2","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/app/Header.js":"3","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/app/Footer.js":"4","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/HomeScreen.js":"5","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/LoginScreen.js":"6","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/RegisterScreen.js":"7","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/components/HeroSlider.js":"8","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/app/store.js":"9","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/reducers/userReducers.js":"10","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/constants/userConstants.js":"11","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/actions/userActions.js":"12","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/components/Message.js":"13","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/components/Loader.js":"14","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/ProfileScreen.js":"15","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/reducers/postReducers.js":"16","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/constants/postConstants.js":"17","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/actions/postActions.js":"18"},{"size":369,"mtime":1613195048379,"results":"19","hashOfConfig":"20"},{"size":724,"mtime":1613103301395,"results":"21","hashOfConfig":"20"},{"size":1797,"mtime":1613102972809,"results":"22","hashOfConfig":"20"},{"size":277,"mtime":1612240169939,"results":"23","hashOfConfig":"20"},{"size":719,"mtime":1612588747392,"results":"24","hashOfConfig":"20"},{"size":3158,"mtime":1613111977697,"results":"25","hashOfConfig":"20"},{"size":5437,"mtime":1613116051747,"results":"26","hashOfConfig":"20"},{"size":2693,"mtime":1612326459776,"results":"27","hashOfConfig":"20"},{"size":1042,"mtime":1613618104880,"results":"28","hashOfConfig":"20"},{"size":1485,"mtime":1613116103172,"results":"29","hashOfConfig":"20"},{"size":616,"mtime":1613115851972,"results":"30","hashOfConfig":"20"},{"size":2625,"mtime":1613115989923,"results":"31","hashOfConfig":"20"},{"size":252,"mtime":1612420554751,"results":"32","hashOfConfig":"20"},{"size":399,"mtime":1612241578908,"results":"33","hashOfConfig":"20"},{"size":10612,"mtime":1613622898878,"results":"34","hashOfConfig":"20"},{"size":1994,"mtime":1613618072277,"results":"35","hashOfConfig":"20"},{"size":785,"mtime":1613618017552,"results":"36","hashOfConfig":"20"},{"size":2618,"mtime":1613621851009,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"uqkqol",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/index.js",[],["77","78"],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/App.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/app/Header.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/app/Footer.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/HomeScreen.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/LoginScreen.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/RegisterScreen.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/components/HeroSlider.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/app/store.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/reducers/userReducers.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/constants/userConstants.js",[],["79","80"],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/actions/userActions.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/components/Message.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/components/Loader.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/screens/ProfileScreen.js",["81","82"],"import Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { getUserPosts, createNewPost } from \"../actions/postActions\";\n\nconst ProfileScreen = ({ match, history }) => {\n  const dispatch = useDispatch();\n  const userId = match.params.id;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const postUserPosts = useSelector((state) => state.postUserPosts);\n  const { error: postsError, posts } = postUserPosts;\n\n  const postCreate = useSelector((state) => state.postCreate);\n  const {\n    loading: createLoading,\n    error: createError,\n    success: createSuccess,\n    post: createPost,\n  } = postCreate;\n\n  useEffect(() => {\n    dispatch(getUserDetails(userId));\n    dispatch(getUserPosts());\n    if (createSuccess) {\n      history.push(`/post/${createPost._id}/edit`);\n    }\n  }, [dispatch, userId, history, createPost, createSuccess]);\n\n  const createPostHandler = () => {\n    dispatch(createNewPost());\n  };\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          {/* Jumbotron Section */}\n          <section id=\"profile-jumbotron\" className=\"py-4\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-4 col-md-5 col-sm-12 text-center\">\n                  <img\n                    src=\"http://placehold.it/250x250\"\n                    className=\"img-fluid\"\n                    alt=\"...\"\n                  />\n                </div>\n                <div className=\"col-lg-8 col-md-7 col-sm-12\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 col-md-12 col-sm-12\">\n                      <h1 className=\"text-success\">\n                        {user.firstname} {user.lastname}\n                      </h1>\n                    </div>\n                    <div className=\"col-lg-6 col-md-12 col-sm-12\">\n                      <h2 className=\"text-secondary pt-1\">{user.title}</h2>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-5 col-md-12 col-sm-12\">\n                      <p className=\"text-secondary\">{user.bio}</p>\n                    </div>\n                    <div className=\"col-lg-7 col-md-12 col-sm-12\">\n                      <h6>Phone: {userInfo.phone}</h6>\n                      <h6>\n                        Email:{\" \"}\n                        <a\n                          href={`mailto:${userInfo.email}?subject=From Code Island Profile`}\n                        >\n                          {userInfo.email}\n                        </a>\n                      </h6>\n                      <h6>\n                        Website:{\" \"}\n                        <a href={user.website} rel=\"noreferrer noopener\">\n                          {user.website}\n                        </a>\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          {/* Profile Section */}\n          <section id=\"profile-resume\">\n            <div className=\"container\">\n              <div className=\"row\">\n                {/* Exp - Edu - Rec Posts Col */}\n                <div className=\"col-lg-8\">\n                  <section id=\"profile-experience\">\n                    <h2 className=\"text-success\">Experience</h2>\n                    <hr className=\"bg-secondary\" />\n                    {!user.experience ? (\n                      <Loader />\n                    ) : user.experience.length === 0 ? (\n                      <p className=\"text-muted\">\n                        Experience has not been posted\n                      </p>\n                    ) : (\n                      <>\n                        {user.experience.map((x, idx) => (\n                          <div key={idx}>\n                            <h4>{x.title}</h4>\n                            <h6>\n                              <strong>\n                                {x.from} - {x.to}\n                              </strong>\n                            </h6>\n                            <h6>\n                              <em>{x.location}</em>\n                            </h6>\n                            <p>{x.description}</p>\n                          </div>\n                        ))}\n                      </>\n                    )}\n                  </section>\n                  <section id=\"profile-education\">\n                    <h2 className=\"text-success\">Education</h2>\n                    <hr className=\"bg-secondary\" />\n                    {!user.education ? (\n                      <Loader />\n                    ) : user.education.length === 0 ? (\n                      <p className=\"text-muted\">\n                        Education has not been posted\n                      </p>\n                    ) : (\n                      <>\n                        {user.education.map((x, idx) => (\n                          <div key={idx}>\n                            <h4>\n                              {x.school} - {x.degree}\n                            </h4>\n                            <h6>\n                              <strong>\n                                {x.from} - {x.to}\n                              </strong>\n                            </h6>\n                            <h6>\n                              <em>{x.location}</em>\n                            </h6>\n                            <p>{x.description}</p>\n                          </div>\n                        ))}\n                      </>\n                    )}\n                  </section>\n                  <section id=\"profile-recent-posts\" className=\"pb-5\">\n                    <div className=\"d-flex justify-content-between\">\n                      <h2 className=\"text-success\">Recent Posts</h2>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={createPostHandler}\n                      >\n                        Add Post\n                      </button>\n                    </div>\n                    <hr className=\"bg-secondary\" />\n                    {postsError && (\n                      <Message variant=\"danger\">{postsError}</Message>\n                    )}\n                    {!posts ? (\n                      <Loader />\n                    ) : posts.length === 0 ? (\n                      <p className=\"text-muted\">There are no posts</p>\n                    ) : (\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          {posts.map((x, idx) => (\n                            <div key={idx}>\n                              <div className=\"card mb-3\">\n                                <div className=\"row no-gutters\">\n                                  <div className=\"col-md-4\">\n                                    <img\n                                      src=\"http://placehold.it/500x400\"\n                                      className=\"card-img img-fluid\"\n                                      alt=\"...\"\n                                    />\n                                  </div>\n                                  <div className=\"col-md-8\">\n                                    <div className=\"card-body\">\n                                      <h5 className=\"card-title\">{x.title}</h5>\n                                      <h5 className=\"text-muted\">\n                                        By {x.user}\n                                      </h5>\n                                      <p className=\"card-text\">\n                                        {x.postdescription}\n                                      </p>\n                                      <p className=\"card-text\">\n                                        <small className=\"text-muted\">\n                                          Posted {x.createdAt}\n                                        </small>\n                                      </p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </section>\n                </div>\n                {/* Tech Stacks - Social Col */}\n                <div className=\"col-lg-4\">\n                  <section id=\"profile-tech-stack\">\n                    <h3 className=\"text-success\">Tech Stacks</h3>\n                    <hr className=\"bg-secondary\" />\n                    <ul className=\"text-uppercase\">\n                      {!user.skills ? (\n                        <Loader />\n                      ) : (\n                        user.skills.map((x, idx) => (\n                          <li key={idx}>\n                            <h5>{x}</h5>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </section>\n                  <section id=\"profile-social\">\n                    <h3 className=\"text-success\">Social Connections</h3>\n                    <hr className=\"bg-secondary\" />\n                    <ul className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item d-flex justify-content-between\">\n                        <div>INSTAGRAM</div>\n                        <div>LOGO</div>\n                      </li>\n                      <li className=\"list-group-item d-flex justify-content-between\">\n                        <div>LOGO</div>\n                        <div>FACEBOOK</div>\n                      </li>\n                      <li className=\"list-group-item d-flex justify-content-between\">\n                        <div>LOGO</div>\n                        <div>LINKEDIN</div>\n                      </li>\n                      <li className=\"list-group-item d-flex justify-content-between\">\n                        <div>LOGO</div>\n                        <div>GITHUB</div>\n                      </li>\n                    </ul>\n                  </section>\n                </div>\n              </div>\n            </div>\n          </section>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProfileScreen;\n","/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/reducers/postReducers.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/constants/postConstants.js",[],"/Users/landonmckell/Trello Projects/CodeIsland/frontend/src/actions/postActions.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":23,"column":14,"nodeType":"91","messageId":"92","endLine":23,"endColumn":27},{"ruleId":"89","severity":1,"message":"93","line":24,"column":12,"nodeType":"91","messageId":"92","endLine":24,"endColumn":23},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],"no-unused-vars","'createLoading' is assigned a value but never used.","Identifier","unusedVar","'createError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]